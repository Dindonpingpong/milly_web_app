{"version":3,"sources":["components/Header/Header.jsx","components/DishCard/DishCard.jsx","pages/Catalog/Catalog.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","Container","Row","Col","className","src","process","alt","DishCard","id","title","description","image","isLoading","Card","body","CardImg","top","width","CardBody","Spinner","color","children","CardTitle","tag","CardText","Button","outline","block","Catalog","useState","cards","setCards","useEffect","document","addEventListener","keyHandler","MOCK","map","sm","window","removeEventListener","e","event","keyCode","MOCK3","setTimeout","MOCK2","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ad4434d1.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Col, Container, Row } from 'reactstrap';\r\nimport './../../App.css';\r\nimport './Header.css';\r\n\r\nconst profile = process.env.PUBLIC_URL + \"/images/profile.png\";\r\n\r\nconst Header = () => {\r\n    return(\r\n        <header>\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <span className=\"font-link header-title\">Milly</span>\r\n                    </Col>\r\n                    <Col>\r\n                          <img className=\"header__profile\" src={profile}\r\n                          alt=\"profile\"/>                            \r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Col, Row, Spinner } from 'reactstrap';\r\nimport './DishCard.css';\r\n\r\nconst DishCard = ({ id, title, description, image, isLoading = false }) => {\r\n    return (\r\n        <Card body className=\"dish-card\" key={id}>\r\n            {\r\n                !isLoading &&\r\n                <CardImg top width=\"100%\" src={image} alt={title} />\r\n            }\r\n            {\r\n                isLoading &&\r\n                <CardBody>\r\n                    <Spinner color=\"success\" children=\"\" />\r\n                </CardBody>\r\n            }\r\n            {\r\n                !isLoading &&\r\n                <CardBody>\r\n                    <CardTitle className=\"font-link\" tag=\"h1\">{title}</CardTitle>\r\n                    <CardText className=\"font-link\">{description}</CardText>\r\n                    <Row className=\"card-buttons\">\r\n                        <Col>\r\n                            <Button outline color=\"success\" block>Add</Button>\r\n                        </Col>\r\n                        <Col>\r\n                            <Button outline color=\"danger\" block>Like</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </CardBody>\r\n            }\r\n        </Card>\r\n    )\r\n};\r\n\r\nexport default DishCard;","import React, { useEffect, useState } from 'react';\r\nimport { Col, Container, Row } from 'reactstrap';\r\nimport DishCard from '../../components/DishCard/DishCard';\r\nimport './Catalog.css';\r\n\r\n\r\nconst Catalog = () => {\r\n    const [cards, setCards] = useState([]);\r\n\r\n    useEffect(() => {\r\n        document.body.addEventListener('keydown', keyHandler)\r\n\r\n        setCards(MOCK.map(({ title, description, image }) =>\r\n            <Col sm='4'>\r\n                <DishCard key={title} title={title} description={description} image={image} />\r\n            </Col>\r\n        ))\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', keyHandler)\r\n        }\r\n    }, [])\r\n\r\n    const keyHandler = (e) => {\r\n        e = e || window.event;\r\n\r\n\r\n        if (e.keyCode === 37) {\r\n            setCards(MOCK3.map(({ id, title, description, image }) =>\r\n                <Col sm='4' >\r\n                    <DishCard key={id} title={title} description={description} image={image} isLoading={true} />\r\n                </Col>\r\n            ))\r\n\r\n            setTimeout(() => {\r\n                setCards(MOCK.map(({ id, title, description, image }) =>\r\n                    <Col sm='4' >\r\n                        <DishCard key={id} title={title} description={description} image={image} />\r\n                    </Col>\r\n                ))\r\n            }, 500)\r\n        }\r\n        else if (e.keyCode === 39) {\r\n            setCards(MOCK3.map(({ id, title, description, image }) =>\r\n                <Col sm='4' >\r\n                    <DishCard key={id} title={title} description={description} image={image} isLoading={true} />\r\n                </Col>\r\n            ))\r\n\r\n            setTimeout(() => {\r\n                setCards(MOCK2.map(({ id, title, description, image }) =>\r\n                    <Col sm='4' >\r\n                        <DishCard key={id} title={title} description={description} image={image} />\r\n                    </Col>\r\n                ))\r\n            }, 500)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container className=\"catalog\">\r\n            <Row>\r\n                {cards}\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Catalog;\r\n\r\nconst MOCK = [\r\n    { id: 1, title: \"Tiramisu\", description: \"a coffee-flavoured Italian dessert. It is made of ladyfingers (savoiardi) dipped in coffee, layered with a whipped mixture of eggs, sugar, and mascarpone cheese, flavoured with cocoa.\", image: \"https://www.dolce-gusto.ru/media/wysiwyg/mygento/recipes/main-tiramisu.jpg\" },\r\n    { id: 2, title: \"Pancakes\", description: \"is a flat cake, often thin and round, prepared from a starch-based batter that may contain eggs, milk and butter and cooked on a hot surface such as a griddle or frying pan, often frying with oil or butter.\", image: \"https://lacuisinedegeraldine.fr/wp-content/uploads/2021/06/Pancakes-04483-2-scaled.jpg\" },\r\n    { id: 3, title: \"Cheesecake\", description: \" is a sweet dessert consisting of one or more layers. The main, and thickest, layer consists of a mixture of a soft, fresh cheese (typically cottage cheese, cream cheese or ricotta), eggs, and sugar.\", image: \"https://www.wilton.com/dw/image/v2/AAWA_PRD/on/demandware.static/-/Sites-wilton-project-master/default/dw789aa3a6/images/project/WLRECIP-8831/Mini-Classic-Cheesecakes.jpg?sw=800&sh=800\" }\r\n]\r\n\r\nconst MOCK2 = [\r\n    { id: 1, title: \"Dumplings\", description: \"is a broad class of dishes that consist of pieces of dough (made from a variety of starch sources) wrapped around a filling, or of dough with no filling. The dough can be based on bread, flour or potatoes, and may be filled with meat, fish, cheese, vegetables, fruits or sweets.\", image: \"https://food.fnr.sndimg.com/content/dam/images/food/fullset/2020/11/19/0/MW612_pork-dumplings_s4x3.jpg.rend.hgtvcom.616.462.suffix/1605802271825.jpeg\" },\r\n    { id: 2, title: \"Pelmeni\", description: \"are dumplings of Russian cuisine that consist of a filling wrapped in thin, unleavened dough.The debate about the exact place of origin is still active, with Ural and Siberia both maintaining strong claims\", image: \"https://www.thespruceeats.com/thmb/yockXsiLyMgJ0zbIuHFd6KEHgHU=/3333x3333/smart/filters:no_upscale()/russian-pelmeni-meat-dumplings-recipe-1137313-hero-01-54b39db73c8148ac9d552efb6768b54f.jpg\" },\r\n    { id: 3, title: \"Manti\", description: \"a dumpling in Asian cuisine.\", image: \"https://img.povar.ru/main/68/d2/0a/72/manti-33573.jpg\" }\r\n]\r\n\r\nconst MOCK3 = [\r\n    { id: 1, title: \"\", description: \"\", image: \"\" },\r\n    { id: 2, title: \"\", description: \"\", image: \"\" },\r\n    { id: 3, title: \"\", description: \"\", image: \"\" }\r\n]","import './App.css';\n\nimport Header from './components/Header/Header';\nimport Catalog from './pages/Catalog/Catalog';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Catalog />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}